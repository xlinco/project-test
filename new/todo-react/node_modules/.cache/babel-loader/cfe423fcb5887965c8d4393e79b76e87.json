{"ast":null,"code":"import _regeneratorRuntime from \"/Users/xinglingling/xlin/codetest/project02/new/todo-react/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getInitList),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(mySage);\n\nimport { GET_INIT_LIST } from \"./actionTypes\";\nimport { put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\"; //异步请求调用\n\nimport { initListAction } from \"./actionCreators\"; //generator函数\n\nfunction getInitList() {\n  var data, action;\n  return _regeneratorRuntime.wrap(function getInitList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.get(\"./list.php\");\n\n        case 3:\n          data = _context.sent;\n          action = initListAction(data);\n          _context.next = 7;\n          return put(action);\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"网络请求失败\");\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 9]]);\n}\n\nfunction mySage() {\n  return _regeneratorRuntime.wrap(function mySage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(GET_INIT_LIST, getInitList);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default mySage;","map":{"version":3,"sources":["/Users/xinglingling/xlin/codetest/project02/new/todo-react/src/store/sagas.js"],"names":["getInitList","mySage","GET_INIT_LIST","put","takeEvery","axios","initListAction","get","data","action","console","log"],"mappings":";;;;yBAOUA,W;;;yBAYAC,M;;AAlBV,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAAQC,GAAR,EAAaC,SAAb,QAA6B,oBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA6B;;AAC7B,SAAQC,cAAR,QAA6B,kBAA7B,C,CAEA;;AACA,SAAUN,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMK,KAAK,CAACE,GAAN,CAAU,YAAV,CAAN;;AAFnB;AAEcC,UAAAA,IAFd;AAGcC,UAAAA,MAHd,GAGuBH,cAAc,CAACE,IAAD,CAHrC;AAAA;AAIQ,iBAAML,GAAG,CAACM,MAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMQC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAUV,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMG,SAAS,CAACF,aAAD,EAAgBF,WAAhB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeC,MAAf","sourcesContent":["\nimport {GET_INIT_LIST} from \"./actionTypes\";\nimport {put, takeEvery} from \"redux-saga/effects\";\nimport axios from \"axios\";   //异步请求调用\nimport {initListAction} from \"./actionCreators\";\n\n//generator函数\nfunction* getInitList(){\n    try{\n        const data=yield axios.get(\"./list.php\");\n        const action = initListAction(data);\n        yield put(action);\n    }catch(e){\n        console.log(\"网络请求失败\")\n    }\n    // const data=yield axios.get(\"./list.php\");\n    // const action = initListAction(data);\n    // yield put(action);\n}\nfunction* mySage(){\n    //第一个参数为action的类型\n    yield takeEvery(GET_INIT_LIST, getInitList)\n}\nexport default mySage;"]},"metadata":{},"sourceType":"module"}