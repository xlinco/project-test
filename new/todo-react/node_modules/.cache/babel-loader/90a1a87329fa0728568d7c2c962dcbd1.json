{"ast":null,"code":"import _regeneratorRuntime from \"/Users/xinglingling/xlin/codetest/project02/new/todo-react/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getInitList),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(mySage);\n\nimport { GET_INIT_LIST } from \"./actionTypes\";\nimport { put, takeEvery } from \"redux-saga/effects\";\nimport Mock from \"mockjs\";\nimport axios from \"axios\"; //异步请求调用\n\nimport { initListAction } from \"./actionCreators\"; //generator函数\n\nfunction getInitList() {\n  return _regeneratorRuntime.wrap(function getInitList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // const data=yield axios.get(\"/getlist\");\n          // const action = initListAction(data);\n          // // yield put(action);\n          // yield console.log(data)\n          setTimeout(function () {\n            var data = [\"hello\", \"dell\", \"lee\"];\n            var action = initListAction(data);\n            put(action); // dispatch(action);\n\n            console.log(action);\n          }, 1000);\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\n\nfunction mySage() {\n  return _regeneratorRuntime.wrap(function mySage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(GET_INIT_LIST, getInitList);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default mySage;","map":{"version":3,"sources":["/Users/xinglingling/xlin/codetest/project02/new/todo-react/src/store/sagas.js"],"names":["getInitList","mySage","GET_INIT_LIST","put","takeEvery","Mock","axios","initListAction","setTimeout","data","action","console","log"],"mappings":";;;;yBAQUA,W;;;yBAcAC,M;;AArBV,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAAQC,GAAR,EAAaC,SAAb,QAA6B,oBAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA6B;;AAC7B,SAAQC,cAAR,QAA6B,kBAA7B,C,CAEA;;AACA,SAAUP,WAAV;AAAA;AAAA;AAAA;AAAA;AACI;AACA;AACA;AACA;AAEAQ,UAAAA,UAAU,CAAC,YAAI;AACP,gBAAMC,IAAI,GAAC,CAAC,OAAD,EAAS,MAAT,EAAgB,KAAhB,CAAX;AACA,gBAAMC,MAAM,GAAGH,cAAc,CAACE,IAAD,CAA7B;AACAN,YAAAA,GAAG,CAACO,MAAD,CAAH,CAHO,CAIP;;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACP,WANS,EAMR,IANQ,CAAV;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUT,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMG,SAAS,CAACF,aAAD,EAAgBF,WAAhB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeC,MAAf","sourcesContent":["\nimport {GET_INIT_LIST} from \"./actionTypes\";\nimport {put, takeEvery} from \"redux-saga/effects\";\nimport Mock from \"mockjs\";\nimport axios from \"axios\";   //异步请求调用\nimport {initListAction} from \"./actionCreators\";\n\n//generator函数\nfunction* getInitList(){\n    // const data=yield axios.get(\"/getlist\");\n    // const action = initListAction(data);\n    // // yield put(action);\n    // yield console.log(data)\n\n    setTimeout(()=>{\n            const data=[\"hello\",\"dell\",\"lee\"]\n            const action = initListAction(data);\n            put(action);\n            // dispatch(action);\n            console.log(action)\n    },1000)\n}\nfunction* mySage(){\n    //第一个参数为action的类型\n    yield takeEvery(GET_INIT_LIST, getInitList)\n}\nexport default mySage;"]},"metadata":{},"sourceType":"module"}