{"ast":null,"code":"import _toConsumableArray from \"/Users/xinglingling/xlin/codetest/project02/new/todo-react02/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/xinglingling/xlin/codetest/project02/new/todo-react02/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xinglingling/xlin/codetest/project02/new/todo-react02/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xinglingling/xlin/codetest/project02/new/todo-react02/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xinglingling/xlin/codetest/project02/new/todo-react02/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xinglingling/xlin/codetest/project02/new/todo-react02/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/xinglingling/xlin/codetest/project02/new/todo-react02/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/xinglingling/xlin/codetest/project02/new/todo-react02/src/Todolist.js\";\nimport React, { Component, Fragment } from 'react';\nimport TodoItem from \"./Todoitem\";\nimport \"./style.css\";\n\nvar Todolist =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Todolist, _Component);\n\n  function Todolist(props) {\n    var _this;\n\n    _classCallCheck(this, Todolist);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Todolist).call(this, props)); //当组件的state或者props发生改变的时候，render函数就会执行\n\n    _this.state = {\n      inputValue: \"\",\n      list: [\"3\", \"5\", \"1\"]\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handelBtnClick = _this.handelBtnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleItemDelete = _this.handleItemDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Todolist, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      var value = e.target.value; //不这步会报错，异步操作\n\n      this.setState(function () {\n        return {\n          inputValue: value\n        };\n      });\n    } //新增li标签\n\n  }, {\n    key: \"handelBtnClick\",\n    value: function handelBtnClick() {\n      this.setState(function (prevState) {\n        return {\n          list: _toConsumableArray(prevState.list).concat([prevState.inputValue]),\n          inputValue: \"\"\n        };\n      });\n    } //删除li标签\n\n  }, {\n    key: \"handleItemDelete\",\n    value: function handleItemDelete(index) {\n      this.setState(function (prevState) {\n        var list = _toConsumableArray(prevState.list);\n\n        list.splice(index, 1);\n        return {\n          list: list\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //页面由render函数渲染出来\n      // console.log(\"render\")\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input\",\n        value: this.state.inputValue,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handelBtnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.getTodoItem()));\n    }\n  }, {\n    key: \"getTodoItem\",\n    value: function getTodoItem() {\n      var _this2 = this;\n\n      return this.state.list.map(function (item, index) {\n        return React.createElement(TodoItem, {\n          key: index,\n          content: item,\n          index: index,\n          DeleteItem: _this2.handleItemDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return Todolist;\n}(Component);\n\nexport default Todolist;","map":{"version":3,"sources":["/Users/xinglingling/xlin/codetest/project02/new/todo-react02/src/Todolist.js"],"names":["React","Component","Fragment","TodoItem","Todolist","props","state","inputValue","list","handleInputChange","bind","handelBtnClick","handleItemDelete","e","value","target","setState","prevState","index","splice","getTodoItem","map","item"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,kFAAMA,KAAN,GADgB,CAEhB;;AACA,UAAKC,KAAL,GAAW;AACTC,MAAAA,UAAU,EAAC,EADF;AAETC,MAAAA,IAAI,EAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT;AAFI,KAAX;AAIA,UAAKC,iBAAL,GAAuB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAvB;AACA,UAAKC,cAAL,GAAoB,MAAKA,cAAL,CAAoBD,IAApB,uDAApB;AACA,UAAKE,gBAAL,GAAsB,MAAKA,gBAAL,CAAsBF,IAAtB,uDAAtB;AATgB;AAUjB;;;;sCACiBG,C,EAAE;AAClB,UAAMC,KAAK,GAAED,CAAC,CAACE,MAAF,CAASD,KAAtB,CADkB,CACc;;AAChC,WAAKE,QAAL,CAAc;AAAA,eAAK;AACfT,UAAAA,UAAU,EAACO;AADI,SAAL;AAAA,OAAd;AAGD,K,CACD;;;;qCACgB;AACd,WAAKE,QAAL,CAAc,UAACC,SAAD;AAAA,eAAc;AAC1BT,UAAAA,IAAI,qBAAKS,SAAS,CAACT,IAAf,UAAoBS,SAAS,CAACV,UAA9B,EADsB;AAE1BA,UAAAA,UAAU,EAAC;AAFe,SAAd;AAAA,OAAd;AAID,K,CACD;;;;qCACiBW,K,EAAM;AACrB,WAAKF,QAAL,CAAc,UAACC,SAAD,EAAa;AACzB,YAAMT,IAAI,sBAAKS,SAAS,CAACT,IAAf,CAAV;;AACAA,QAAAA,IAAI,CAACW,MAAL,CAAYD,KAAZ,EAAkB,CAAlB;AACA,eAAO;AAACV,UAAAA,IAAI,EAAJA;AAAD,SAAP;AACD,OAJD;AAKD;;;6BAEQ;AACP;AACA;AACA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,UAA3C;AAAuD,QAAA,QAAQ,EAAE,KAAKE,iBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,KAAKS,WAAL,EARH,CALF,CADF;AAkBD;;;kCAEY;AAAA;;AACX,aACE,KAAKd,KAAL,CAAWE,IAAX,CAAgBa,GAAhB,CAAoB,UAACC,IAAD,EAAMJ,KAAN,EAAc;AAChC,eACI,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,KAAf;AAAsB,UAAA,OAAO,EAAEI,IAA/B;AAAqC,UAAA,KAAK,EAAEJ,KAA5C;AAAmD,UAAA,UAAU,EAAE,MAAI,CAACN,gBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,OAJD,CADF;AAOD;;;;EAjEoBX,S;;AAoEvB,eAAeG,QAAf","sourcesContent":["import React, { Component,Fragment } from 'react';\nimport TodoItem from \"./Todoitem\";\nimport \"./style.css\";\n\nclass Todolist extends Component {\n  constructor(props){\n    super(props);\n    //当组件的state或者props发生改变的时候，render函数就会执行\n    this.state={\n      inputValue:\"\",\n      list:[\"3\",\"5\",\"1\"]\n    };\n    this.handleInputChange=this.handleInputChange.bind(this);\n    this.handelBtnClick=this.handelBtnClick.bind(this);\n    this.handleItemDelete=this.handleItemDelete.bind(this)\n  }\n  handleInputChange(e){\n    const value =e.target.value;    //不这步会报错，异步操作\n    this.setState(()=>({\n        inputValue:value\n    }))\n  }\n  //新增li标签\n  handelBtnClick(){\n    this.setState((prevState)=>({\n      list:[...prevState.list,prevState.inputValue],\n      inputValue:\"\"\n    }))\n  }\n  //删除li标签\n  handleItemDelete(index){\n    this.setState((prevState)=>{\n      const list=[...prevState.list]\n      list.splice(index,1)\n      return {list }\n    })\n  }\n  \n  render() {\n    //页面由render函数渲染出来\n    // console.log(\"render\")\n    return (\n      <Fragment>\n        <div>\n          <input className=\"input\" value={this.state.inputValue} onChange={this.handleInputChange}/>\n          <button onClick={this.handelBtnClick}>提交</button>\n        </div>\n        <ul>\n          {/* {this.state.list.map((item,index)=>{\n            return (\n              <div>\n                <TodoItem content={item} index={index} DeleteItem={this.handleItemDelete}/>\n              </div>\n            )\n          })} */}\n          {this.getTodoItem()}\n        </ul>\n      </Fragment>\n    );\n  }\n  \n  getTodoItem(){\n    return (\n      this.state.list.map((item,index)=>{\n        return (\n            <TodoItem key={index} content={item} index={index} DeleteItem={this.handleItemDelete}/>\n        )\n      })\n    )\n  }\n}\n\nexport default Todolist;\n"]},"metadata":{},"sourceType":"module"}